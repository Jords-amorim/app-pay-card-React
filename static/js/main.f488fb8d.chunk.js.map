{"version":3,"sources":["presentation/useCases/listUserAPI.js","presentation/components/cardUser/cards.js","presentation/components/cardUser/cardUser.js","index.js"],"names":["getUser","a","result","axios","get","response","data","console","log","cards","card_number","cvv","expiry_date","CardUser","useState","user","setUser","isOpenModalNewTransaction","setIsOpenModalNewTransaction","userSelected","setUserSelected","useEffect","then","length","className","map","item","src","img","alt","name","id","username","type","onClick","handleOpenModalNewTransaction","isOpen","onRequestClose","placeholder","card","ReactDOM","render","document","getElementById"],"mappings":"mOAIaA,EAAO,uCAAG,8BAAAC,EAAA,6DACjBC,EAAS,KADQ,kBAGIC,IAAMC,IALf,oDAEK,QAInB,QADMC,EAHa,cAInB,IAAIA,OAAJ,EAAIA,EAAUC,QAAMJ,EAAM,OAAGG,QAAH,IAAGA,OAAH,EAAGA,EAAUC,MAJpB,gDAOnBC,QAAQC,IAAR,MAPmB,iCASdN,GATc,yDAAH,qDCJTO,EAAQ,CAEf,CACEC,YAAa,mBACbC,IAAK,IACLC,YAAa,SAGf,CACEF,YAAa,mBACbC,IAAK,IACLC,YAAa,U,OCgEJC,EAlEE,WAAO,IAAD,EACKC,mBAAS,IADd,mBACZC,EADY,KACNC,EADM,OAE+CF,oBAAS,GAFxD,mBAEZG,EAFY,KAEeC,EAFf,OAGqBJ,oBAAS,GAH9B,mBAGZK,EAHY,KAGEC,EAHF,KAKnBC,qBAAU,WACNrB,IAAUsB,MAAK,SAAAjB,GAAQ,OAAIW,EAAQX,QACpC,IAWH,OACI,sCACS,OAAJU,QAAI,IAAJA,OAAA,EAAAA,EAAMQ,QAAS,GACZ,sBAAKC,UAAU,gBAAf,UACI,sDADJ,OAEKT,QAFL,IAEKA,OAFL,EAEKA,EAAMU,KAAI,SAACC,GAAD,OACP,sBAAKF,UAAU,eAAf,UACI,qBAAKG,IAAG,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAME,IAAKC,IAAG,sBAAUH,QAAV,IAAUA,OAAV,EAAUA,EAAMI,QACxC,gCACI,iEAAwBJ,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAMI,QAC9B,kDAAYJ,QAAZ,IAAYA,OAAZ,EAAYA,EAAMK,GAAlB,+BAAoCL,QAApC,IAAoCA,OAApC,EAAoCA,EAAMM,eAE9C,wBACIC,KAAK,SACLC,QAAS,kBAvBC,SAACR,GACnCN,EAAgBM,GAChBR,GAA6B,GAqBUiB,CAA8BT,IAFjD,4BAWhB,eAAC,IAAD,CACIU,OAAQnB,EACRoB,eA7B2B,WACnCnB,GAA6B,IA0BzB,UAII,gDAEI,sCAAOC,QAAP,IAAOA,OAAP,EAAOA,EAAcW,UAEzB,gCACI,uBAAOQ,YAAY,YAEnB,wCACK7B,QADL,IACKA,OADL,EACKA,EAAOgB,KAAI,SAACc,GAAD,OACR,wCACKA,QADL,IACKA,OADL,EACKA,EAAM7B,6BC1DvC8B,IAASC,OACP,qBAAKjB,UAAU,MAAf,SACE,cAAC,EAAD,MAEFkB,SAASC,eAAe,W","file":"static/js/main.f488fb8d.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst GET_USERS = 'https://www.mocky.io/v2/5d531c4f2e0000620081ddce'\n\nexport const getUser = async () => {\n  let result = null\n  try {\n    const response = await axios.get(GET_USERS)\n    if (response?.data) result = response?.data\n\n  } catch (err) {\n    console.log(err)\n  }\n  return result\n\n}","export let cards = [\n    // valid card\n    {\n      card_number: '1111111111111111',\n      cvv: 789,\n      expiry_date: '01/18',\n    },\n    // invalid card\n    {\n      card_number: '4111111111111234',\n      cvv: 123,\n      expiry_date: '01/20',\n    },\n  ];","import React, { useState, useEffect } from \"react\";\nimport Modal from 'react-modal';\n\nimport { getUser } from '../../useCases/listUserAPI';\n\nimport {cards} from './cards.js'\n\nimport '../../index.css'\n\nconst CardUser = () => {\n    const [user, setUser] = useState([])\n    const [isOpenModalNewTransaction, setIsOpenModalNewTransaction] = useState(false)\n    const [userSelected, setUserSelected] = useState(false)\n\n    useEffect(() => {\n        getUser().then(response => setUser(response))\n    }, [])\n\n    const handleOpenModalNewTransaction = (item) => {\n        setUserSelected(item)\n        setIsOpenModalNewTransaction(true)\n    }\n\n    const handleCloseModalNewTransaction = () => {\n        setIsOpenModalNewTransaction(false)\n    }\n\n    return (\n        <>\n            {user?.length > 0 && (\n                <div className=\"CardContainer\">\n                    <h1>Lista de Usuários</h1>\n                    {user?.map((item) => (\n                        <div className=\"CardConteudo\">\n                            <img src={item?.img} alt={`Foto ${item?.name}`} />\n                            <div>\n                                <h4>{`Nome do usuário ${item?.name}`}</h4>\n                                <h4>{`ID: ${item?.id} - Username: ${item?.username}`}</h4>\n                            </div>\n                            <button\n                                type=\"button\"\n                                onClick={() => handleOpenModalNewTransaction(item)}\n                            >\n                                Pagar\n                            </button>\n                        </div>\n                    ))}\n                </div>\n            )}\n\n            <Modal\n                isOpen={isOpenModalNewTransaction}\n                onRequestClose={handleCloseModalNewTransaction}\n            >\n                <h2>\n                    Pagamento para\n                    <span>{userSelected?.name}</span>\n                </h2>\n                <div>\n                    <input placeholder=\"R$ 0,00\">\n                    </input>\n                    <select>\n                        {cards?.map((card) => (\n                            <option>\n                                {card?.card_number}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n\n            </Modal>\n        </>\n    )\n}\n\nexport default CardUser;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './presentation/index.css';\n\nimport CardUser from './presentation/components/cardUser/cardUser';\n\nReactDOM.render(\n  <div className=\"App\">\n    <CardUser />\n  </div>,\n  document.getElementById('root')\n);"],"sourceRoot":""}